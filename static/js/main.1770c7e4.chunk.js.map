{"version":3,"sources":["components/MetoriteLandings/style.module.css","components/Search/style.module.css","components/Navbar/style.module.css","components/MetoriteLanding/style.module.css","components/Spinner/style.module.css","components/Navbar/index.js","components/MetoriteLanding/index.js","components/MetoriteLandings/index.js","components/Spinner/index.js","components/ErrorMessage/index.js","components/Search/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","metoriteLandings","tableRow","orangeBg","searchForm","searchInput","searchButton","navbar","loader","load7","Navbar","_ref","title","react_default","a","createElement","className","styles","MeteoriteLanding","landingInfo","name","id","fall","mass","nametype","recclass","reclat","reclong","year","formattedYear","Date","getFullYear","MetoriteLandings","renderRows","meteoriteLandings","map","m","MetoriteLanding","key","cellSpacing","cellPadding","concat","Spinner","ErrorMessage","errorMsg","Search","handleSearch","_useState","useState","_useState2","Object","slicedToArray","value","setValue","onSubmit","e","preventDefault","onChange","target","placeholder","type","App","renderMeteoriteLandings","meteoriteStrikes","offset","loading","state","setState","_useState3","_useState4","cache","setCache","_useState5","_useState6","setErrorMsg","url","handleScroll","asyncToGenerator","regenerator_default","mark","_callee","windowHeight","body","html","docHeight","result","wrap","_context","prev","next","window","innerHeight","document","documentElement","offsetHeight","Math","max","scrollHeight","clientHeight","pageYOffset","s","objectSpread","fetchFromNasa","sent","abrupt","stop","apply","this","arguments","_x","_fetchFromNasa","_callee3","params","_context3","fetch","then","res","json","_handleSearch","_callee4","term","query","newState","_context4","error","length","useEffect","_init","_callee2","_context2","message","addEventListener","init","removeEventListener","components_ErrorMessage","components_MetoriteLandings","components_Spinner","components_Navbar","components_Search","_x2","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1770c7e4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"metoriteLandings\":\"style_metoriteLandings__2LWV0\",\"tableRow\":\"style_tableRow__34hWp\",\"orangeBg\":\"style_orangeBg__1qXL-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchForm\":\"style_searchForm__1L62y\",\"searchInput\":\"style_searchInput__1ARwC\",\"searchButton\":\"style_searchButton__2qLpC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"style_navbar__190Rv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableRow\":\"style_tableRow__fGUKL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"style_loader__3UAw_\",\"load7\":\"style_load7__3eUuR\"};","import React from 'react'\n\nimport styles from './style.module.css'\n\nfunction Navbar ({title}) {\n  return (\n    <div className={styles.navbar}>\n      <h1>{title}</h1>\n    </div>\n  )\n}\n\nexport default Navbar","import React from 'react'\n\nimport styles from './style.module.css'\n\nfunction MeteoriteLanding ({landingInfo}) {\n  const {name, id, fall, mass, nametype, recclass, reclat, reclong, year} = landingInfo\n  const formattedYear = new Date(year).getFullYear() || 'N/A'\n\n  return (\n    <tr className={styles.tableRow}>\n      <td>{name}</td>\n      <td>{id}</td>\n      <td>{nametype}</td>\n      <td>{recclass}</td>\n      <td>{mass}</td>\n      <td>{fall}</td>\n      <td>{formattedYear}</td>\n      <td>{reclat}</td>\n      <td>{reclong}</td>\n    </tr>\n  )\n}\n\nexport default MeteoriteLanding","import React from 'react'\n\nimport MetoriteLanding from '../MetoriteLanding'\n\nimport styles from './style.module.css'\n\nfunction MetoriteLandings ({meteoriteLandings}) {\n  const renderRows = meteoriteLandings.map(m => <MetoriteLanding key={m.id} landingInfo={m} />)\n\n  return ( \n    <table className={styles.metoriteLandings} cellSpacing=\"0\" cellPadding=\"0\">\n      <thead>\n        <tr className={`${styles.tableRow} ${styles.orangeBg}`}>\n          <th>Name</th>\n          <th>Id</th>\n          <th>Name Type</th>\n          <th>Rec Class</th>\n          <th>Mass (g)</th>\n          <th>Fall</th>\n          <th>Year</th>\n          <th>Latitude</th>\n          <th>Longitude</th>\n        </tr>\n      </thead>\n      <tbody>\n        {renderRows}\n      </tbody>\n    </table>\n  )\n}\n\nexport default MetoriteLandings","import React from 'react'\n\nimport styles from './style.module.css'\n\nfunction Spinner () {\n  return (\n    <div className={styles.loader}>Loading...</div>\n  )\n}\n\nexport default Spinner","import React from 'react'\n\n// import styles from './style.module.css'\n\nfunction ErrorMessage ({errorMsg}) {\n  return (\n    <div>{errorMsg}</div>\n  )\n}\n\nexport default ErrorMessage","import React, {useState} from 'react'\n\nimport styles from './style.module.css'\n\nfunction Search ({handleSearch}) {\n  const [value, setValue] = useState('') \n  \n  const onSubmit = e => {\n    e.preventDefault()\n    return handleSearch(value)\n  }\n\n  const onChange = e => {\n    setValue(e.target.value)\n  }\n\n  return ( \n    <form onSubmit={onSubmit} className={styles.searchForm}>\n      <input onChange={onChange} className={styles.searchInput} placeholder=\"Enter search terms\" type=\"text\" />\n      <button className={styles.searchButton}>Search</button>\n    </form>\n  )\n}\n\nexport default Search","import React, {useState, useEffect} from 'react'\n\nimport Navbar from './components/Navbar'\nimport MetoriteLandings from './components/MetoriteLandings'\nimport Spinner from './components/Spinner'\nimport ErrorMessage from './components/ErrorMessage'\nimport Search from './components/Search'\n\nimport './App.css'\n\nfunction App () {\n  const [state, setState] = useState({meteoriteStrikes: null, offset: 0, loading: false})\n  const [cache, setCache] = useState(null)\n  const [errorMsg, setErrorMsg] = useState('')\n  \n  const url = 'https://data.nasa.gov/resource/gh4g-9sfh.json'\n  let renderMeteoriteLandings\n  let offset = 0\n\n  const handleScroll = async () => {\n    const windowHeight = \"innerHeight\" in window ? window.innerHeight : document.documentElement.offsetHeight\n    const body = document.body\n    const html = document.documentElement\n    const docHeight = Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight)\n    const windowBottom = windowHeight + window.pageYOffset\n    if (windowBottom >= docHeight) {\n      offset += 50\n      setState(s => ({...s, loading: true}))\n      const result = await fetchFromNasa(`$limit=50&$offset=${offset}`)\n      return setState(s => ({...s, meteoriteStrikes: s.meteoriteStrikes.concat(result), loading: false}))\n    }\n  }\n\n  async function fetchFromNasa (params) {\n    const result = await fetch(`${url}?${params}`)\n    .then(res => res.json())\n    return result\n  }\n\n  async function handleSearch (term) {\n    const query = `query=SELECT * WHERE LOWER(name) = LOWER('${term}')`\n    const result = await fetchFromNasa(`$${query}`)\n    const errorMsg = 'Oh! Unfortunately, no results were found.'\n \n    if (!result.error) {\n      let newState\n      if (!term && !result.length) {\n        newState = cache\n      } else {\n        if (!result.length) return setErrorMsg(errorMsg)\n        newState = result\n      }   \n\n      setErrorMsg('')\n      return setState(s => ({...s, meteoriteStrikes: newState}))\n    }\n\n    return setErrorMsg(errorMsg)\n  }\n\n  \n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll)\n\n    async function init () {\n      const result = await fetchFromNasa(`$limit=50`)\n      \n      if (result.error) return setErrorMsg(result.message)\n      setCache(result)\n      return setState(s => ({...s, meteoriteStrikes: result}))\n    }\n\n    init()\n    \n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll)\n    }\n  }, [])\n\n  if (errorMsg) {\n    renderMeteoriteLandings = <ErrorMessage errorMsg={errorMsg} />\n  } else if (state.meteoriteStrikes) {\n    renderMeteoriteLandings = <MetoriteLandings meteoriteLandings={state.meteoriteStrikes} />\n  } else {\n    renderMeteoriteLandings = <Spinner />\n  }\n\n  return (\n    <div className=\"app\">\n      <Navbar title='Meteorite Explorer' />\n      <Search handleSearch={handleSearch} />\n      {renderMeteoriteLandings}\n      {state.loading && <Spinner />}\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}